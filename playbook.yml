---
- name: Déploiement projet LAMP
  hosts: all
  become: yes

  vars:
    project_git_url: "https://gitlab.com/Vincent-Antoine/trygl.git"
    web_root: "/var/www/html/trygl"
    apache_root: "{{ web_root }}/src"
    apache_conf_path: "/etc/httpd/conf/httpd.conf"

  tasks:
    - name: Créer l’utilisateur ynov
      ansible.builtin.user:
        name: ynov
        shell: /bin/bash
        create_home: yes

    - name: Installer Apache, MariaDB, PHP, Git et unzip
      ansible.builtin.dnf:
        name:
          - httpd
          - mariadb105-server
          - php
          - php-mysqlnd
          - php-cli
          - git
          - unzip
        state: present
        update_cache: yes

    - name: Supprimer tout ancien /var/www/src
      ansible.builtin.file:
        path: /var/www/src
        state: absent

    - name: Supprimer l’ancien contenu de {{ web_root }}
      ansible.builtin.file:
        path: "{{ web_root }}"
        state: absent

    - name: Cloner le dépôt GitLab dans {{ web_root }}
      ansible.builtin.git:
        repo: "{{ project_git_url }}"
        dest: "{{ web_root }}"
        version: main
        force: yes

    - name: Télécharger l’installateur Composer
      ansible.builtin.get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-setup.php

    - name: Installer Composer
      ansible.builtin.command:
        cmd: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
        creates: /usr/local/bin/composer

    - name: Vérifier si composer.json existe
      ansible.builtin.stat:
        path: "{{ apache_root }}/composer.json"
      register: composer_json

    - name: Installer les dépendances PHP avec Composer
      ansible.builtin.command:
        cmd: /usr/local/bin/composer install --no-interaction
        chdir: "{{ apache_root }}"
      when: composer_json.stat.exists

    - name: Mettre à jour DocumentRoot pour qu’il pointe sur {{ apache_root }}
      ansible.builtin.replace:
        path: "{{ apache_conf_path }}"
        regexp: '^\s*DocumentRoot\s+".*"'
        replace: 'DocumentRoot "{{ apache_root }}"'

    - name: Autoriser l’accès à {{ apache_root }}
      ansible.builtin.blockinfile:
        path: "{{ apache_conf_path }}"
        insertafter: '^DocumentRoot'
        block: |
          <Directory "{{ apache_root }}">
              AllowOverride None
              Require all granted
          </Directory>

    - name: Redémarrer Apache
      ansible.builtin.service:
        name: httpd
        state: restarted

    - name: Vérifier que l’application répond (healthcheck)
      ansible.builtin.uri:
        url: http://localhost/
        status_code: 200
